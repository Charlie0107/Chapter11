public abstract class Equipacion 
{

	private int tipo_equipacion;
	private String equipacion;
	protected double tarifa;
	protected final static String[] equipacion_nombre = {"Embarcación personal", "Barco pontón", "Bote de remos", "Canoa", "Kayak", "Silla de playa", "Paraguas", "Otro"};
	public static final int ALTURA = 0;
	protected final double[]surcharges = {50,40,15,12,10,2,1,0};
	protected abstract String equipacion_nombre(int ancho);
	

	public Equipacion(int tipo_equipacion) 
	{
		if(tipo_equipacion >= 0 && tipo_equipacion < equipacion_nombre.ancho)
		{
			equipacion = equipacion_nombre(tipo_equipacion);
		}
		
		else
		{
			equipacion = equipacion_nombre(equipacion_nombre.ancho);
		}
	}
	
	
	public String[] getEquipacion_nombre()
	{
		return equipacion_nombre;
	}
	
	
	public double[] getCharges()
	{
		return surcharges;
	}	
	
	
	public int getTipo_equipacion() 
	{
		return tipo_equipacion;
	}
	
	
	public String getEquipacion()
	{
		return equipacion;
	}
	
	
	public double getTarifa()
	{
		return tipo_equipacion;
	}
	
	
	public String politicas() 
	{	
		return null;
	}
	

	public void setEquipacion(String equipacion)
	{
		this.equipacion = equipacion;
	}
	
	public void setTarifa(double tarifa)
	{
		this.tarifa = tarifa;
	}

	public void setTipo_equipacion(int tipo_equipacion)
	{
		this.tipo_equipacion = tipo_equipacion;
	}
}







public abstract class EquipacionWithLessons extends Equipacion
{

	public EquipacionWithLessons(int tipo_equipacion) 
	{
		super(tipo_equipacion);
		System.out.println("La equipacion A es " 
							+ (tipo_equipacion + 1) 
							+ " , " + equipacion_nombre[tipo_equipacion]);
		System.out.println(politicas());
	}
	
	
	public String politicas()
	{
		return "La pieza de equipacio requiere de $27 ";
	}
}





public abstract class EquipacionWithoutLesson extends Equipacion
{
	
	public EquipacionWithoutLesson(int tipo_equipacion) 
	{
		super(tipo_equipacion);
		System.out.println("The Rented Equipacion Is A " 
							+ (tipo_equipacion + 1) 
							+ " , " + equipacion_nombre[tipo_equipacion]);
		System.out.println(politicas());
	}
	
	
	public String politicas()
	{
		return "Esta pieza de equipacion no requiere! ";
	}
}


class Rental{
    public static double preciopor_invitado = 35.00;
    public static int cantidad = 50;
    private String numero_evento;
    private int invitados;
    private double precio;
    
    public Event(){
        this("A000",0);
    }
    
    public Event(String num_evento, int invitados){
       setNumero_evento(num_evento);
       setInvitados(invitados);
    }

    public void setNumero_evento(String num_evento){
        numero_evento = num_evento;
    }

    public void setInvitados(int numero_invitados){
        invitados = numero_invitados;
        precio = invitados*preciopor_invitado;
    }
 
    public String getNumero_evento(){
        return numero_evento;
    }

    public int getNumero_invitados(){
        return invitados;
    }

    public double getPrecio(){
        return precio;
    }
}


public class RentalDemo {

    
    public static void main(String[] args) {
        String num_evento;
        int invitados;
        
        Event detalles_evento = new evento();
        num_evento = getNumero_evento();
        invitados = getNumero_invitados();
        
        Event detalles_evento2 = new evento(numero_evento, invitados);
        
        displayDetalles_evento(detalles_evento);
        displayDetalles_evento(detalles_evento2);
    }
    
    public static String getNumero_evento(){
        Scanner input = new Scanner (System.in);
        System.out.println("Ingresa el numero de evento: ");
        String Numero_evento = input.nextLine();
        return numero_evento;
    }
    
    public static int getNumero_invitados(){
        Scanner input = new Scanner(System.in);
        System.out.println("Ingresa el numero de invitados: ");
        int numOfGuests = input.nextInt();
        displayEvent();
        return Numero_invitados;
    }  
    
    public static void displayEvent(){
        System.out.println("Fiestaaaaa");
        
    }
        
    public static void displayDetalles_evento(evento detalles_evento){
        
        if (detalles_evento.getNumbero_invitados()>=evento.CUT_OFF_AMOUNT) {
            System.out.println("Tu fiesta es demasiado grande.");
        }
        else {
        System.out.println("DETALLES DEL EVENTO");
        System.out.println("El numero del evento es : " + detalles_evento.getNumero_evento());
        System.out.println("El numero de invitados son: " + detalles_evento.getNumero_invitados());
        System.out.println("El costo total es: $" + detalles_evento.getPrecio());
        }
        
    }
          
}
